#!/usr/bin/env bash
# convert.sh ‚Äî mp3‚Üíwav —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π ffmpeg (—á–µ—Ä–µ–∑ brew –∏–ª–∏ —Å–±–æ—Ä–∫–æ–π –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤)

set -euo pipefail

# –ü–∞–ø–∫–∞ –¥–ª—è –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ –∏ —Å–±–æ—Ä–∫–∏
BUILD_DIR="$HOME/ffmpeg_build"
mkdir -p "$BUILD_DIR"
cd "$BUILD_DIR"

export PREFIX="$BUILD_DIR/install"
export PATH="$PREFIX/bin:$PATH"
export PKG_CONFIG_PATH="$PREFIX/lib/pkgconfig"

# ---------------------------------------------------------
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è ffmpeg
# ---------------------------------------------------------
if command -v ffmpeg &>/dev/null; then
  echo "‚úÖ ffmpeg —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(command -v ffmpeg)"
else
  echo "‚öôÔ∏è ffmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω"

  # ---------------------------------------------------------
  # macOS + Homebrew: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ brew
  # ---------------------------------------------------------
  if [[ "$(uname)" == "Darwin" ]] && command -v brew &>/dev/null; then
    echo "üç∫ macOS —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º brew ‚Üí —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ffmpeg —á–µ—Ä–µ–∑ brew"
    brew install ffmpeg
    echo "‚úÖ ffmpeg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ brew"
  else
    echo "üîß –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É ffmpeg –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤..."

    build_nasm() {
      echo "üì¶ –°–±–æ—Ä–∫–∞: nasm"
      curl -LO https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/nasm-2.15.05.tar.gz
      tar xzvf nasm-2.15.05.tar.gz
      cd nasm-2.15.05
      ./configure --prefix="$PREFIX" && make -j$(nproc || sysctl -n hw.logicalcpu) && make install
      cd ..
    }

    build_yasm() {
      echo "üì¶ –°–±–æ—Ä–∫–∞: yasm"
      curl -LO https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz
      tar xzvf yasm-1.3.0.tar.gz
      cd yasm-1.3.0
      ./configure --prefix="$PREFIX" && make -j$(nproc || sysctl -n hw.logicalcpu) && make install
      cd ..
    }

    build_x264() {
      echo "üì¶ –°–±–æ—Ä–∫–∞: x264"
      git clone https://code.videolan.org/videolan/x264.git
      cd x264
      ./configure --prefix="$PREFIX" --enable-static --disable-opencl
      make -j$(nproc || sysctl -n hw.logicalcpu)
      make install
      cd ..
    }

    build_x265() {
      echo "üì¶ –°–±–æ—Ä–∫–∞: x265"
      git clone https://bitbucket.org/multicoreware/x265_git.git x265
      cd x265/build/linux || cd x265/source
      cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$PREFIX" -DENABLE_SHARED=off ../../source
      make -j$(nproc || sysctl -n hw.logicalcpu)
      make install
      cd "$BUILD_DIR"
    }

    build_libvpx() {
      echo "üì¶ –°–±–æ—Ä–∫–∞: libvpx"
      git clone https://chromium.googlesource.com/webm/libvpx
      cd libvpx
      ./configure --prefix="$PREFIX" --disable-examples --disable-unit-tests
      make -j$(nproc || sysctl -n hw.logicalcpu)
      make install
      cd ..
    }

    build_lame() {
      echo "üì¶ –°–±–æ—Ä–∫–∞: libmp3lame"
      curl -LO https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
      tar xzvf lame-3.100.tar.gz
      cd lame-3.100
      ./configure --prefix="$PREFIX" --enable-nasm --disable-shared
      make -j$(nproc || sysctl -n hw.logicalcpu)
      make install
      cd ..
    }

    build_fdk_aac() {
      echo "üì¶ –°–±–æ—Ä–∫–∞: fdk-aac"
      git clone --depth 1 https://github.com/mstorsjo/fdk-aac
      cd fdk-aac
      autoreconf -fiv
      ./configure --prefix="$PREFIX" --disable-shared
      make -j$(nproc || sysctl -n hw.logicalcpu)
      make install
      cd ..
    }

    build_opus() {
      echo "üì¶ –°–±–æ—Ä–∫–∞: libopus"
      curl -LO https://downloads.xiph.org/releases/opus/opus-1.3.1.tar.gz
      tar xzvf opus-1.3.1.tar.gz
      cd opus-1.3.1
      ./configure --prefix="$PREFIX" --disable-shared
      make -j$(nproc || sysctl -n hw.logicalcpu)
      make install
      cd ..
    }

    build_ffmpeg() {
      echo "üé¨ –°–±–æ—Ä–∫–∞: ffmpeg"
      git clone https://github.com/FFmpeg/FFmpeg ffmpeg
      cd ffmpeg
      ./configure --prefix="$PREFIX" \
        --pkg-config-flags="--static" \
        --extra-cflags="-I$PREFIX/include" \
        --extra-ldflags="-L$PREFIX/lib" \
        --extra-libs="-lpthread -lm" \
        --enable-gpl --enable-nonfree \
        --enable-libx264 --enable-libx265 \
        --enable-libvpx --enable-libmp3lame \
        --enable-libfdk_aac --enable-libopus \
        --disable-shared --enable-static

      make -j$(nproc || sysctl -n hw.logicalcpu)
      make install
      cd ..
    }

    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —à–∞–≥–æ–≤ —Å–±–æ—Ä–∫–∏
    build_nasm
    build_yasm
    build_x264
    build_x265
    build_libvpx
    build_lame
    build_fdk_aac
    build_opus
    build_ffmpeg

    echo "‚úÖ ffmpeg —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤: $PREFIX"
  fi
fi

# ---------------------------------------------------------
# –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è mp3 ‚Üí wav + —É–¥–∞–ª–µ–Ω–∏–µ + –ø–æ–¥—Å—á—ë—Ç
# ---------------------------------------------------------
echo "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é mp3 ‚Üí wav"
count=0
while IFS= read -r mp3file; do
  wavfile="${mp3file%.mp3}.wav"
  ffmpeg -loglevel error -y -i "$mp3file" -ar 44100 "$wavfile" \
    && echo "‚úÖ –°–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: $mp3file ‚Üí $wavfile" \
    && ((count++)) \
    && rm "$mp3file" \
    && echo "üóëÔ∏è –£–¥–∞–ª—ë–Ω: $mp3file" \
    || echo "‚ùå –û—à–∏–±–∫–∞: $mp3file"
done < <(find . -type f -iname "*.mp3")

echo "üîö –í—Å–µ–≥–æ —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: $count"
